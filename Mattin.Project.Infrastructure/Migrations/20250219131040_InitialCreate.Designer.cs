// <auto-generated />
using System;
using Mattin.Project.Infrastructure.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Mattin.Project.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250219131040_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("Mattin.Project.Core.Models.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Kungsgatan 1, 111 43 Stockholm",
                            Created = new DateTime(2025, 2, 19, 13, 10, 39, 906, DateTimeKind.Utc).AddTicks(4310),
                            Email = "info@mattin-lassei.se",
                            Name = "Mattin-Lassei Group AB",
                            PhoneNumber = "08-123 45 67"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Sveavägen 10, 111 57 Stockholm",
                            Created = new DateTime(2025, 2, 19, 13, 10, 39, 906, DateTimeKind.Utc).AddTicks(4310),
                            Email = "contact@techinnovators.se",
                            Name = "Tech Innovators AB",
                            PhoneNumber = "08-987 65 43"
                        });
                });

            modelBuilder.Entity("Mattin.Project.Core.Models.Entities.ProjectEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("HourlyRate")
                        .HasPrecision(10, 2)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProjectManager")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ProjectNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("StatusId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotalPrice")
                        .HasPrecision(15, 2)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("StatusId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientId = 1,
                            Created = new DateTime(2025, 2, 19, 13, 10, 39, 906, DateTimeKind.Utc).AddTicks(4310),
                            Description = "Komplett redesign av företagets webbplats med fokus på användarupplevelse",
                            EndDate = new DateTime(2025, 4, 20, 13, 10, 39, 906, DateTimeKind.Utc).AddTicks(4310),
                            HourlyRate = 1200m,
                            ProjectManager = "Anna Andersson",
                            ProjectNumber = "2024-001",
                            StartDate = new DateTime(2025, 1, 20, 13, 10, 39, 906, DateTimeKind.Utc).AddTicks(4310),
                            StatusId = 2,
                            Title = "Webbplats Redesign",
                            TotalPrice = 480000m
                        },
                        new
                        {
                            Id = 2,
                            ClientId = 2,
                            Created = new DateTime(2025, 2, 19, 13, 10, 39, 906, DateTimeKind.Utc).AddTicks(4310),
                            Description = "Utveckling av ny e-handelsplattform med integration mot befintliga system",
                            EndDate = new DateTime(2025, 6, 4, 13, 10, 39, 906, DateTimeKind.Utc).AddTicks(4310),
                            HourlyRate = 1100m,
                            ProjectManager = "Erik Eriksson",
                            ProjectNumber = "2024-002",
                            StartDate = new DateTime(2025, 3, 6, 13, 10, 39, 906, DateTimeKind.Utc).AddTicks(4310),
                            StatusId = 1,
                            Title = "E-handelsplattform",
                            TotalPrice = 880000m
                        },
                        new
                        {
                            Id = 3,
                            ClientId = 1,
                            Created = new DateTime(2025, 2, 19, 13, 10, 39, 906, DateTimeKind.Utc).AddTicks(4310),
                            Description = "Utveckling av mobilapp för intern kommunikation",
                            EndDate = new DateTime(2025, 4, 5, 13, 10, 39, 906, DateTimeKind.Utc).AddTicks(4310),
                            HourlyRate = 1300m,
                            ProjectManager = "Maria Nilsson",
                            ProjectNumber = "2024-003",
                            StartDate = new DateTime(2025, 2, 4, 13, 10, 39, 906, DateTimeKind.Utc).AddTicks(4310),
                            StatusId = 2,
                            Title = "App-utveckling",
                            TotalPrice = 416000m
                        });
                });

            modelBuilder.Entity("Mattin.Project.Core.Models.Entities.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDefault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("Statuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2025, 2, 19, 13, 10, 39, 906, DateTimeKind.Utc).AddTicks(4310),
                            Description = "Projektet har inte påbörjats än",
                            IsDefault = true,
                            Name = "Ej påbörjat",
                            SortOrder = 1
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2025, 2, 19, 13, 10, 39, 906, DateTimeKind.Utc).AddTicks(4310),
                            Description = "Projektet är under utveckling",
                            IsDefault = false,
                            Name = "Pågående",
                            SortOrder = 2
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2025, 2, 19, 13, 10, 39, 906, DateTimeKind.Utc).AddTicks(4310),
                            Description = "Projektet är färdigt",
                            IsDefault = false,
                            Name = "Avslutat",
                            SortOrder = 3
                        });
                });

            modelBuilder.Entity("Mattin.Project.Core.Models.Entities.ProjectEntity", b =>
                {
                    b.HasOne("Mattin.Project.Core.Models.Entities.Client", "Client")
                        .WithMany("Projects")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mattin.Project.Core.Models.Entities.Status", "Status")
                        .WithMany("Projects")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Mattin.Project.Core.Models.Entities.Client", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("Mattin.Project.Core.Models.Entities.Status", b =>
                {
                    b.Navigation("Projects");
                });
#pragma warning restore 612, 618
        }
    }
}
