@model Mattin.Project.Core.Models.DTOs.Service.CreateServiceDto

@{
    ViewData["Title"] = "Create Service";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1>Create Service</h1>
    <a asp-action="Index" class="btn btn-secondary">
        <i class="bi bi-arrow-left"></i> Back to List
    </a>
</div>

<div class="row">
    <div class="col-md-8">
        <div class="card">
            <div class="card-body">
                <form asp-action="Create">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                    <div class="mb-3">
                        <label asp-for="Name" class="form-label">Name</label>
                        <input asp-for="Name" class="form-control" />
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Description" class="form-label">Description</label>
                        <textarea asp-for="Description" class="form-control" rows="3"></textarea>
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Category" class="form-label">Category</label>
                        <input asp-for="Category" class="form-control" list="categoryList" />
                        <datalist id="categoryList">
                            <option value="Development"></option>
                            <option value="Design"></option>
                            <option value="Infrastructure"></option>
                            <option value="Security"></option>
                            <option value="Analytics"></option>
                            <option value="Consulting"></option>
                        </datalist>
                        <span asp-validation-for="Category" class="text-danger"></span>
                    </div>

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label asp-for="BasePrice" class="form-label">Base Price</label>
                            <div class="input-group">
                                <span class="input-group-text">$</span>
                                <input asp-for="BasePrice" class="form-control" type="number" step="0.01" min="0" />
                            </div>
                            <span asp-validation-for="BasePrice" class="text-danger"></span>
                        </div>

                        <div class="col-md-6 mb-3">
                            <label asp-for="HourlyRate" class="form-label">Hourly Rate</label>
                            <div class="input-group">
                                <span class="input-group-text">$</span>
                                <input asp-for="HourlyRate" class="form-control" type="number" step="0.01" min="0" />
                            </div>
                            <span asp-validation-for="HourlyRate" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="mt-4">
                        <button type="submit" class="btn btn-info text-white">
                            <i class="bi bi-save"></i> Create Service
                        </button>
                        <a asp-action="Index" class="btn btn-secondary">Cancel</a>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <div class="col-md-4">
        <div class="card">
            <div class="card-header">
                <h5 class="card-title mb-0">Help</h5>
            </div>
            <div class="card-body">
                <p class="card-text">
                    <i class="bi bi-info-circle text-info"></i>
                    Fill in the service details to create a new service. Required fields are marked with an asterisk
                    (*).
                </p>
                <hr />
                <h6>Tips:</h6>
                <ul class="small">
                    <li>Base Price is the starting cost for the service</li>
                    <li>Hourly Rate is used for additional work beyond the base scope</li>
                    <li>Category helps organize services (select from list or enter new)</li>
                    <li>Provide a clear description of what the service includes</li>
                </ul>
            </div>
        </div>

        <div class="card mt-4">
            <div class="card-header">
                <h5 class="card-title mb-0">Pricing Guide</h5>
            </div>
            <div class="card-body">
                <div class="mb-3">
                    <h6>Base Price</h6>
                    <p class="small text-muted mb-0">
                        Set this as the minimum cost for delivering the service, including:
                    </p>
                    <ul class="small mb-0">
                        <li>Initial setup and planning</li>
                        <li>Core deliverables</li>
                        <li>Basic support</li>
                    </ul>
                </div>
                <hr />
                <div>
                    <h6>Hourly Rate</h6>
                    <p class="small text-muted mb-0">
                        This rate applies to:
                    </p>
                    <ul class="small mb-0">
                        <li>Additional features</li>
                        <li>Extended support</li>
                        <li>Custom modifications</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $(document).ready(function () {
            // Format currency inputs
            $('.input-group input[type="number"]').on('input', function () {
                var value = $(this).val();
                if (value && !isNaN(value)) {
                    $(this).val(parseFloat(value).toFixed(2));
                }
            });
        });
    </script>
}